apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "app-ws.fullname" . }}-ws
  labels:
    {{- include "app-ws.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.app.replicas }}
  selector:
    matchLabels:
      {{- include "app-ws.selectorLabels" . | nindent 6 }}
  {{- with .Values.app.deploymentStrategy }}
  strategy:
  {{- toYaml . | trim | nindent 4 }}
  {{- end }}
  template:
    metadata:
      {{- with .Values.app.annotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app-ws.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      {{- if .Values.app.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.app.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.app.automountServiceAccountToken }}
      containers:
        - name: ws
          image: "{{ .Values.global.image.repository }}:{{ .Values.global.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.global.image.pullPolicy }}
          {{- if .Values.app.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.app.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          args: ['daphne', '--bind', '0.0.0.0', '--port', '5000', '-v', '1', 'escriptorium.asgi:application']
          env:
            {{- template "app.common.envs" . }}
            {{- if .Values.app.extraEnvironmentVars -}}
            {{- range $key, $value := .Values.app.extraEnvironmentVars }}
            - name: {{ printf "%s" $key | replace "." "_" | upper | quote }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.app.extraEnvironmentSecrets -}}
            {{- range $key, $value := .Values.app.extraEnvironmentSecrets }}
            - name: {{ printf "%s" $key | replace "." "_" | upper | quote }}
              valueFrom:
                secretKeyRef:
                  name: {{ $value.secretName }}
                  key: {{ $value.secretKey }}
            {{- end }}
            {{- end }}
            {{- if or $.Values.app.cmdWrapper $.Values.global.cmdWrapper }}
            - name: CMD_WRAPPER
              value: {{ coalesce $.Values.app.cmdWrapper $.Values.global.cmdWrapper }}
            {{- end }}
          ports:
            - name: {{ .Values.app.channelserver.service.portName }}
              containerPort: 5000
              protocol: TCP
          {{- if .Values.app.channelserver.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: "{{ if eq .Values.app.contextPath "/" }}{{ .Values.app.channelserver.livenessProbe.path }}{{ else }}{{ .Values.app.contextPath }}{{ .Values.app.channelserver.livenessProbe.path }}{{ end }}"
              port: 5000
            failureThreshold: {{ .Values.app.channelserver.livenessProbe.failureThreshold }}
            initialDelaySeconds: {{ .Values.app.channelserver.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.app.channelserver.livenessProbe.periodSeconds }}
            successThreshold: {{ .Values.app.channelserver.livenessProbe.successThreshold }}
            timeoutSeconds: {{ .Values.app.channelserver.livenessProbe.timeoutSeconds }}
          {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ['/bin/sh', '-c', 'sleep 15']
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
          volumeMounts:
            - name: media
              mountPath: /usr/src/app/media
            - name: static
              mountPath: /usr/src/app/static
            {{- if .Values.global.pgConfig.ssl.pgSslSecretName }}
            - name: pg-ssl-certs
              mountPath: /opt/heartex/secrets/pg_certs
            {{- end }}
            {{- if .Values.global.redisConfig.ssl.redisSslSecretName }}
            - name: redis-ssl-certs
              mountPath: /opt/heartex/secrets/redis_certs
            {{- end }}
            {{- if .Values.app.extraVolumeMounts }}
              {{ toYaml .Values.app.extraVolumeMounts | nindent 12 }}
            {{- end }}
      {{- with .Values.app.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.app.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "tplvalues.render" (dict "value" .Values.app.topologySpreadConstraints "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.app.dnsPolicy }}
      dnsPolicy: {{ .Values.app.dnsPolicy }}
      {{- end }}
      {{- if .Values.app.enableServiceLinks }}
      enableServiceLinks: {{ .Values.app.enableServiceLinks }}
      {{- end }}
      {{- if .Values.app.shareProcessNamespace }}
      shareProcessNamespace: {{ .Values.app.shareProcessNamespace }}
      {{- end }}
      {{- with .Values.app.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.app.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: media
          {{- if and .Values.global.persistence.enabled (eq .Values.global.persistence.type "volume") }}
          persistentVolumeClaim:
            claimName: {{ include "pvc.claimName" . }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: static
          emptyDir: {}    
        {{- if .Values.global.pgConfig.ssl.pgSslSecretName }}
        - name: pg-ssl-certs
          secret:
            secretName: {{ .Values.global.pgConfig.ssl.pgSslSecretName }}
            defaultMode: 0640
        {{- end }}
        {{- if .Values.global.redisConfig.ssl.redisSslSecretName }}
        - name: redis-ssl-certs
          secret:
            secretName: {{ .Values.global.redisConfig.ssl.redisSslSecretName  }}
            defaultMode: 0640
        {{- end }}
        {{- if .Values.app.extraVolumes -}}
          {{- toYaml .Values.app.extraVolumes | nindent 8 }}
        {{- end }}
