# Default values for annotationlab.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Optionally override the fully qualified name
# fullnameOverride: annotationlab

## Optionally override the name
# nameOverride: annotationlab

replicas: 1
image:
  repository: johnsnowlabs/annotationlab
  tag: 4.6.2
  pullPolicy: IfNotPresent

  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  pullSecrets:
  - kubernetesdockerhub

registryCredentials:
  create: false
  secretName: kubernetesdockerhub
  registryUrl: docker.io
  username: XXXXX
  password: XXXXX

updateStrategy:
  type: Recreate
  # type: RollingUpdate
  # rollingUpdate:
  #   maxSurge: 1
  #   maxUnavailable: 0

restartPolicy: Always

hostAliases: []
#  - ip: "1.2.3.4"
#    hostnames:
#      - "my.host.com"

## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext:
  enabled: false
  fsGroup: 65534
  runAsUser: 65534

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  name: "annotationlab"

service:
  portName: http
  type: ClusterIP
  port: 8200

# use proxy if needed
# HTTP_PROXY, HTTPS_PROXY, NO_PROXY env configuration
# http_proxy, https_proxy, no_proxy env configuration
# proxy:
#   http: [protocol://]<host>[:port]
#   https: [protocol://]<host>[:port]
#   no: <comma-separated list of hosts/domains>

# insert custom ca chain if needed
# custom_cacert: |-
#   -----BEGIN CERTIFICATE-----
#   ....
#   -----END CERTIFICATE-----

## Annotation Lab data Persistent Volume Storage Class
## If defined, storageClassName: <storageClass>
## If set to "-", storageClassName: "", which disables dynamic provisioning
## If undefined (the default) or set to null, no storageClassName spec is
##   set, choosing the default provisioner.  (gp2 on AWS, standard on
##   GKE, AWS & OpenStack)
##
persistence:
  enabled: true
  ## A manually managed Persistent Volume and Claim
  ## If defined, PVC must be created manually before volume will be bound
  ## The value is evaluated as a template, so, for example, the name can depend on .Release or .Chart
  ##
  # existingClaim:

  # storageClass: "-"
  accessModes:
    - ReadWriteOnce
  size: 8Gi
  annotations: {}

## Additional sidecar containers, e. g. for a database proxy, such as Google's cloudsql-proxy
extraContainers: |

## lifecycleHooks defines the container lifecycle hooks
lifecycleHooks: |
  # postStart:
  #   exec:
  #     command: ["/bin/sh", "-c", "ls"]

## Override the default for the Keycloak container, e.g. for clusters with large cache that requires rebalancing.
terminationGracePeriodSeconds: 60

affinity: |
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            {{- include "annotationlab.selectorLabels" . | nindent 10 }}
          matchExpressions:
            - key: role
              operator: NotIn
              values:
                - test
        topologyKey: kubernetes.io/hostname
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchLabels:
              {{- include "annotationlab.selectorLabels" . | nindent 12 }}
            matchExpressions:
              - key: role
                operator: NotIn
                values:
                  - test
          topologyKey: failure-domain.beta.kubernetes.io/zone

nodeSelector: {}
priorityClassName: ""
tolerations: []

## Additional pod labels
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

## Extra Annotations to be added to pod
podAnnotations: {}

readinessProbe: |
  httpGet:
    path: /healthz
    port: http
  initialDelaySeconds: 10
  timeoutSeconds: 1

resources: {}
  # limits:
  #   cpu: "100m"
  #   memory: "1024Mi"
  # requests:
  #   cpu: "100m"
  #   memory: "1024Mi"

sharedData:
  enabled: true
  #storageClass: ""
  storageSize: "100Gi"
  images:
    storageSize: "5Gi"

backup:
  enable: false
  files: true
  s3_access_key: ""
  s3_secret_key: ""
  s3_bucket_fullpath: ""

model_server:
  count: 1
  service:
    portName: http
    port: 5000
    type: ClusterIP

myjohnsnowlabs:
  client_id: sI4MKSmLHOX2Pg7XhM3McJS2oyKG5PHcp0BlANEW
  origin: https://my.johnsnowlabs.com

extraVolumes: |

extraVolumeMounts: |

extraEnv: |

activelearning:
  image:
    repository: johnsnowlabs/annotationlab
    tag: active-learning-4.6.2

  extraEnv: |
#
  extraVolumeMounts: |
#
  extraVolumes: |
#
  lifecycleHooks: |

networkPolicy:
   enabled: false

# Allow traffic for annotationlab http port from everywhere
extraNetworkPolicies: |
  - namespaceSelector: {}
ingress:
  enabled: true
  # defaultBackend force keycloak and annotationlab in the same ingress resource
  defaultBackend: false
  uploadLimitInMegabytes: 16
  servicePort: http
  annotations: {}
  hosts:
    - host: annotationlab
      path: /
  tls: []
    # - hosts:
    #   - keycloak.example.com
    # secretName: keycloak-tls

configuration:
  # set both url and base_url to access AnnotationLab by domain which is not provided in kubernetes ingress
  # url: http://annotationlab.example.com
  # base_url: /

  # logLevel: debug

  # Uncomment if external keycloak used
  # KEYCLOAK_SERVER_URL: https://keycloak.example.com/auth/
  # KEYCLOAK_USERNAME: admin
  # KEYCLOAK_PASSWORD: admin
  # Provide secret name with CA (data: truststore.jks: ...)
  # TRUSTSTORE_JKS_SECRET:
  # TRUSTSTORE_JKS_PASSWORD:

  # Uncomment if external database used
  # DATABASE_CONNECTION_STRING: 'postgresql://annotationlab:annotationlab@annochart-postgresql-local/annotationlab'

  KEYCLOAK_CLIENT_ID: 'annotationlab'
  KEYCLOAK_CLIENT_SECRET_KEY: '09a71c59-0351-4ce6-bc8f-8fd3feb9d2ff'

  KEYCLOAK_REALM_NAME: 'master'

  FLASK_SECRET_KEY: 'rpaQghA-9lmpLwB8qxW0FsW1TJyZZYuB60ppzswpTzM='
  PERSISTENT_STORAGE: '/projects'

installPostgresql: true
postgresql:
  image:
    tag: 11.16.0-debian-11-r4
  postgresqlUsername: annotationlab
  postgresqlPassword: annotationlab
  postgresqlDatabase: annotationlab
  persistence:
    enabled: true

  networkPolicy:
    enabled: false

installKeycloak: true
keycloak:
  replicas: 1
  ## Additional arguments to start command e.g. -Dkeycloak.import= to load a realm
  args:
  - -Dkeycloak.profile=preview
  image:
    tag: 16.1.1
  imagePullSecrets:
    - name: "kubernetesdockerhub"

  ## Ingress configuration.
  ingress:
    # If `true`, an Ingress is created, if `false` use keycloak as subpath of annotationlab ingress
    enabled: false
    # Ingress annotations
    annotations: {}
    # Additional Ingress labels
    labels: {}
     # List of rules for the Ingress
    rules:
      -
        # Ingress host
        host: 'keycloak.example.com'
        # Paths for the host
        paths:
          - /
    # TLS configuration
    tls: []
      # - hosts:
          # - keycloak.example.com
        # secretName: keycloak-tls

  extraEnv: |
    - name: PROXY_ADDRESS_FORWARDING
      value: "true"
    - name: KEYCLOAK_USER_FILE
      value: /secrets/admincreds/user
    - name: KEYCLOAK_PASSWORD_FILE
      value: /secrets/admincreds/password

  secrets:
    admincreds:
      stringData:
        user: admin
        password: secret

  extraInitContainers: |
    - name: theme-provider
      image: johnsnowlabs/annotationlab:auth-theme-4.6.2
      imagePullPolicy: IfNotPresent
      command:
        - sh
      args:
        - -c
        - |
          echo "Copying theme..."
          cp -R /johnsnowlabs/* /theme
      volumeMounts:
        - name: theme
          mountPath: /theme

  extraVolumeMounts: |
    - name: admincreds
      mountPath: /secrets/admincreds
      readOnly: true
    - name: theme
      mountPath: /opt/jboss/keycloak/themes/johnsnowlabs

  extraVolumes: |
    - name: admincreds
      secret:
        secretName: '{{ include "annotationlab.keycloak.fullname" . }}-admincreds'
    - name: theme
      emptyDir: {}

  postgresql:
    enabled: true
    networkPolicy:
      enabled: false
    image:
      tag: 11.16.0-debian-11-r4
    nameOverride: keycloak-postgres
    persistence:
      enabled: true
    image:
      tag: 11.16.0-debian-11-r4
    postgresqlUsername: keycloak
    postgresqlPassword: keycloak
    postgresqlDatabase: keycloak

installAirflow: true
airflow:
  ingress:
    enabled: false

  executor: "CeleryExecutor"

  images:
    airflow:
      repository: johnsnowlabs/annotationlab
      tag: dataflows-4.6.2

    redis:
      repository: redis
      tag: alpine3.16
 
  networkPolicies:
     enabled: false
 

  registry:
    secretName: kubernetesdockerhub

  data:
    metadataConnection:
      user: airflow
      pass: airflow
      host: ~
      port: 5432
      db: airflow
      sslmode: disable
    resultBackendConnection:
      user: airflow
      pass: airflow
      host: ~
      port: 5432
      db: airflow
      sslmode: disable

  postgresql:
    enabled: true
    nameOverride: airflow-postgresql
    postgresqlDatabase: airflow
    postgresqlUsername: airflow
    postgresqlPassword: airflow
    persistence:
      enabled: true

  redis:
    password: "DefaulTRediS-P0ss"

  config:
    core:
      dags_are_paused_at_creation: "False"
    api:
      auth_backend: airflow.api.auth.backend.default
    webserver:
      rbac: "False" # Set false to enable access without credentials
      authenticate: "False"
      base_url: "http://0.0.0.0:8080"

  extraEnv: |
    - name: AIRFLOW__LOGGING__LOGGING_LEVEL
      value: INFO
    - name: ANNOTATIONLAB_FULLNAME
      value: {{ include "annotationlab.annotationlab.fullname" . }}
    - name: ANNOTATIONLAB_URL
      value: http://{{ include "annotationlab.annotationlab.fullname" . }}:8200
    - name: AIRFLOW_NAMESPACE
      value: {{ .Release.Namespace }}
    - name: DATABASE_CONNECTION_STRING
      valueFrom:
        secretKeyRef:
          name: {{ include "annotationlab.annotationlab.fullname" . }}-secret
          key: DATABASE_CONNECTION_STRING

  workers:
    persistence:
      enabled: true
      size: 5Gi

  webserver:
    defaultUser:
      enabled: false

  statsd:
    enabled: false
